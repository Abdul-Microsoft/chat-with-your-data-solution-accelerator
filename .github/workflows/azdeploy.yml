name: Deploy Azure Resources

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      environmentName:
        description: 'The name of the environment'
        required: true
        default: "pslTestAuto2"
      location:
        description: 'The location for the deployment'
        required: true
        default: "eastus2"
      azureSearchUseSemanticSearch:
        description: 'The azureSearchUseSemanticSearch for the deployment'
        required: true
        default: "false"
      azureSearchTopK:
        description: 'The azureSearchTopK for the deployment'
        required: true
        default: "5"
      azureSearchUseIntegratedVectorization:
        description: 'The azureSearchUseIntegratedVectorization for the deployment'
        required: true
        default: "false"
      azureOpenAIModel:
        description: 'The azureOpenAIModel for the deployment'
        required: true
        default: "gpt-35-turbo-16k"
      azureOpenAIModelName:
        description: 'The azureOpenAIModelName for the deployment'
        required: true
        default: "gpt-35-turbo-16k"
      azureOpenAIModelVersion:
        description: 'The azureOpenAIModelVersion for the deployment'
        required: true
        default: "0613"
      orchestrationStrategy:
        description: 'The orchestrationStrategy for the deployment'
        required: true
        default: "openai_function"
      conversationFlow:
        description: 'The conversationFlow for the deployment'
        required: true
        default: "custom"

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Azure CLI
        run: |
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
          az --version  # Verify installation

      - name: Login to Azure
        run: |
          az login --service-principal -u ${{ secrets.AZURE_CLIENT_ID }} -p ${{ secrets.AZURE_CLIENT_SECRET }} --tenant ${{ secrets.AZURE_TENANT_ID }}

      - name: Install Bicep CLI
        run: az bicep install

      - name: Deploy Bicep Template
        run: |
          set -e
          echo "Location: ${{ github.event.inputs.location }}"
          echo "conversationFlow: ${{ github.event.inputs.conversationFlow }}"
          echo "azureOpenAIModelVersion: ${{ github.event.inputs.azureOpenAIModelVersion }}"

          echo "Environment Name: ${{ github.event.inputs.environmentName }}"

          az deployment sub create \
            --name autoDemo \
            --location eastus \
            --template-file infra/main.bicep \
            --parameters environmentName=${{ github.event.inputs.environmentName }} location=${{ github.event.inputs.location }} \
            azureSearchUseSemanticSearch=${{ github.event.inputs.azureSearchUseSemanticSearch }} azureSearchTopK=${{ github.event.inputs.azureSearchTopK }} \
            azureSearchUseIntegratedVectorization=${{ github.event.inputs.azureSearchUseIntegratedVectorization }} azureOpenAIModel=${{ github.event.inputs.azureOpenAIModel }} \
            azureOpenAIModelName=${{ github.event.inputs.azureOpenAIModelName }} azureOpenAIModelVersion=${{ github.event.inputs.azureOpenAIModelVersion }} \
            orchestrationStrategy=${{ github.event.inputs.orchestrationStrategy }} conversationFlow=${{ github.event.inputs.conversationFlow }}
