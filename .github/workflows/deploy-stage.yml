
name: Deploy Azure Resources-updated

on:
  push:
    branches:
      - PSL-Automation-Flow-Draft
  workflow_dispatch:
    inputs:
      environmentName:
        description: 'The name of the environment'
        required: true
        default: "pslTestAuto2"
      location:
        description: 'The location for the deployment'
        required: true
        default: "eastus2"


jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Azure CLI
        run: |
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
          az --version  # Verify installation

      - name: Login to Azure
        run: |

          az login --service-principal -u ${{ secrets.AUTO_AZURE_CLIENT_ID }} -p ${{ secrets.AUTO_AZURE_CLIENT_SECRET }} --tenant ${{ secrets.AUTO_AZURE_TENANT_ID }}
          az account set --subscription ${{ secrets.AUTO_AZURE_SUBSCRIPTION_ID }}

          echo "TestAZURE_SUBSCRIPTION_ID=${{ secrets.AUTO_AZURE_SUBSCRIPTION_ID }}"
          echo "TestAZURE_CLIENT_ID=${{ secrets.AUTO_AZURE_CLIENT_ID }}"
          echo "TestAZURE_CLIENT_SECRET=${{ secrets.AUTO_AZURE_CLIENT_SECRET }}"
          echo "TestAZURE_TENANT_ID=${{ secrets.AUTO_AZURE_TENANT_ID }}"


      - name: Install Bicep CLI
        run: az bicep install


      # - name: Deploy Bicep Template
      #   run: |
      #     az deployment group create \
      #       --resource-group PSLResourceGroupDraft \
      #       --template-file .github/workflows/test.bicep \
      #       --parameters vaultName=myTestKeyVault2

      - name: Deploy Bicep Template
        run: |
          # Debugging: Print input values
          echo "Deploying with parameters:"
          echo "Environment Name: ${{ github.event.inputs.environmentName }}"
          echo "Location: ${{ github.event.inputs.location }}"


          set -o pipefail
          OUTPUT=$(
          az deployment sub create \
            --name autoDemo \
            --location eastus \
            --template-file infra/main.bicep \
            --parameters environmentName=${{ github.event.inputs.environmentName }} \
            location=${{ github.event.inputs.location }} 2>&1)

          # Capture the exit status of the command
          EXIT_STATUS=$?

          # Print the captured output for debugging
          echo "Full output from deployment command:"
          echo "$OUTPUT"

          # Check if the command was successful
          if [ $EXIT_STATUS -ne 0 ]; then
            echo "Deployment failed with exit code $EXIT_STATUS"
            exit 1
          fi

          echo "Deployment succeeded"
