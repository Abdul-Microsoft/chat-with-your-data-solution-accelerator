
name: Deploy Azure Resources

on:
  push:
    branches:
      - PSL-Automation-Flow-Draft
  workflow_dispatch:


jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Azure CLI
        run: |
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
          az --version  # Verify installation

      - name: Login to Azure
        run: |
          az login --service-principal -u ${{ secrets.AZURE_CLIENT_ID }} -p ${{ secrets.AZURE_CLIENT_SECRET }} --tenant ${{ secrets.AZURE_TENANT_ID }}
          az account set --subscription ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Install Bicep CLI
        run: az bicep install

      - name: Check and Create Resource Group
        id: check_create_rg
        run: |
          set -e  # Exit on error
          echo "Checking if resource group exists..."
          rg_exists=$(az group exists --name PSLResourceGroupDraft)
          if [ "$rg_exists" = "false" ]; then
            echo "Resource group does not exist. Creating..."
            az group create --name PSLResourceGroupDraft --location eastus > output.log 2>&1 || { echo "Error creating resource group:"; cat output.log; exit 1; }
          else
            echo "Resource group already exists."
          fi

      - name: Verify Resource Group Creation
        run: |
          echo "Verifying resource group creation..."
          rg_exists=$(az group exists --name PSLResourceGroupDraft)
          if [ "$rg_exists" = "false" ]; then
            echo "Error: Resource group creation failed."
            exit 1
          else
            echo "Resource group verified successfully."
          fi

      - name: Deploy Bicep Template
        run: |
          az deployment group create \
            --resource-group PSLResourceGroupDraft \
            --template-file ./test.bicep \
            --parameters vaultName=myTestKeyVault

      - name: Output Key Vault URI
        run: |
          keyVaultUri=$(az deployment group show --resource-group PSLResourceGroupDraft --name myDraftDeploymentName --query "properties.outputs.vaultUri.value" -o tsv)
          echo "Key Vault URI: $keyVaultUri"
