
name: Deploy Azure Resources

on:
  push:
    branches:
      - PSL-Automation-Flow-Draft
  workflow_dispatch:


jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Azure CLI
        run: |
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
          az --version  # Verify installation

      - name: Login to Azure
        run: |

          az login --service-principal -u ${{ secrets.AUTO_AZURE_CLIENT_ID }} -p ${{ secrets.AUTO_AZURE_CLIENT_SECRET }} --tenant ${{ secrets.AUTO_AZURE_TENANT_ID }}
          az account set --subscription ${{ secrets.AUTO_AZURE_SUBSCRIPTION_ID }}

          echo "TestAZURE_SUBSCRIPTION_ID=${{ secrets.AUTO_AZURE_SUBSCRIPTION_ID }}"
          echo "TestAZURE_CLIENT_ID=${{ secrets.AUTO_AZURE_CLIENT_ID }}"
          echo "TestAZURE_CLIENT_SECRET=${{ secrets.AUTO_AZURE_CLIENT_SECRET }}"
          echo "TestAZURE_TENANT_ID=${{ secrets.AUTO_AZURE_TENANT_ID }}"


      - name: Install Bicep CLI
        run: az bicep install

      # - name: Check and Create Resource Group
      #   id: check_create_rg
      #   run: |
      #     set -e  # Exit on error
      #     echo "Checking if resource group exists..."
      #     rg_exists=$(az group exists --name PSLResourceGroupDraft)
      #     if [ "$rg_exists" = "false" ]; then
      #       echo "Resource group does not exist. Creating..."
      #       az group create --name PSLResourceGroupDraft --location eastus > output.log 2>&1 || { echo "Error creating resource group:"; cat output.log; exit 1; }
      #     else
      #       echo "Resource group already exists."
      #     fi

      # - name: Verify Resource Group Creation
      #   run: |
      #     echo "Verifying resource group creation..."
      #     rg_exists=$(az group exists --name PSLResourceGroupDraft)
      #     if [ "$rg_exists" = "false" ]; then
      #       echo "Error: Resource group creation failed."
      #       exit 1
      #     else
      #       echo "Resource group verified successfully."
      #     fi

      # - name: Deploy Bicep Template
      #   run: |
      #     az deployment group create \
      #       --resource-group PSLResourceGroupDraft \
      #       --template-file .github/workflows/test.bicep \
      #       --parameters vaultName=myTestKeyVault2

      - name: Deploy Bicep Template
        run: |
          set -o pipefail
          OUTPUT=$(
          az deployment sub create \
            --name autoDemo \
            --location eastus \
            --template-file infra/main.bicep \
            --parameters environmentName=pslTestAuto2 location=eastus2) || {

            echo "Deployment failed"
            echo "$OUTPUT"
            exit 1

          }

          echo "$OUTPUT"


      # - name: Output Key Vault URI
      #   run: |
      #     keyVaultUri=$(az deployment group show --resource-group PSLResourceGroupDraft --name myDraftDeploymentName --query "properties.outputs.vaultUri.value" -o tsv)
      #     echo "Key Vault URI: $keyVaultUri"
